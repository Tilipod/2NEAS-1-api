{
  "swagger": "2.0",
  "info": {
    "description": "Менеджер, управляющий задачами по обучению нейронных сетей",
    "version": "0.0.2",
    "title": "2NEAS-1-scheduler"
  },
  "host": "localhost:50003",
  "basePath": "/",
  "tags": [
    {
      "name": "client-request-controller",
      "description": "Контроллер для запросов клиента (API-сервера)"
    },
    {
      "name": "user-controller",
      "description": "Контроллер для работы с пользователями"
    }
  ],
  "paths": {
    "/client/": {
      "post": {
        "tags": [
          "client-request-controller"
        ],
        "summary": "Создать новую задачу по обучению нейронной сети",
        "operationId": "createTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrainingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/client/{taskId}": {
      "get": {
        "tags": [
          "client-request-controller"
        ],
        "summary": "Получить статус задачи по обучению нейронной сети",
        "operationId": "getTaskStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrainingResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/client/{taskId}/result": {
      "get": {
        "tags": [
          "client-request-controller"
        ],
        "summary": "Получить результат задачи по обучению нейронной сети",
        "operationId": "getTaskTrainingResultUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/client/{taskId}/statistic": {
      "get": {
        "tags": [
          "client-request-controller"
        ],
        "summary": "Получить статистику обучения нейронной сети",
        "operationId": "getStatisticUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrainingStatistic"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/client/{taskId}/status": {
      "put": {
        "tags": [
          "client-request-controller"
        ],
        "summary": "Обновить статус задачи по обучению нейронной сети",
        "operationId": "changeTaskStatusUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "statusChangeDto",
            "description": "statusChangeDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskStatusChange"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/client/{taskId}/stop": {
      "post": {
        "tags": [
          "client-request-controller"
        ],
        "summary": "Остановить задачу по обучению нейронной сети",
        "operationId": "stopTrainingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "taskId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Зарегистрировать пользователя",
        "operationId": "registerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "registerDto",
            "description": "registerDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/users/{username}/by-username": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Получить информацию о пользователе по его имени",
        "operationId": "findUserByUsernameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/users/{uuid}/by-uuid": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Получить информацию о пользователе по его uuid",
        "operationId": "findUserByUuidUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/users/{uuid}/role": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Добавить роль пользователю",
        "operationId": "addRoleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "role",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Удалить роль пользователю",
        "operationId": "deleteRoleUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "role",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "GrantedAuthority": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        }
      },
      "title": "GrantedAuthority"
    },
    "InputTypeDto": {
      "type": "object",
      "required": [
        "inputType"
      ],
      "properties": {
        "channels": {
          "type": "integer",
          "format": "int32",
          "description": "Кол-во каналов (для СНС)"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Высота изображения (для СНС)"
        },
        "inputType": {
          "type": "string",
          "description": "Тип входных данных",
          "enum": [
            "CONVOLUTIONAL"
          ]
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Ширина изображения (для СНС)"
        }
      },
      "title": "InputTypeDto"
    },
    "LayerDto": {
      "type": "object",
      "required": [
        "layerNumber",
        "layerType"
      ],
      "properties": {
        "activationType": {
          "type": "string",
          "description": "Функция активации для нейронов слоя",
          "enum": [
            "CUBE",
            "ELU",
            "HARDSIGMOID",
            "HARDTANH",
            "IDENTITY",
            "LEAKYRELU",
            "RATIONALTANH",
            "RELU",
            "RRELU",
            "SIGMOID",
            "SOFTMAX",
            "SOFTPLUS",
            "SOFTSIGN",
            "TANH",
            "RECTIFIEDTANH",
            "SELU"
          ]
        },
        "countInput": {
          "type": "integer",
          "format": "int32",
          "description": "Кол-во входов"
        },
        "countOutput": {
          "type": "integer",
          "format": "int32",
          "description": "Кол-во выходов"
        },
        "kernelHeight": {
          "type": "integer",
          "format": "int32",
          "description": "Высота фильтра"
        },
        "kernelWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Ширина фильтра"
        },
        "layerNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер слоя"
        },
        "layerType": {
          "type": "string",
          "description": "Тип слоя",
          "enum": [
            "CONVOLUTIONAL",
            "BATCH_NORMALIZATION",
            "SUBSAMPLING",
            "DENSE",
            "OUTPUT"
          ]
        },
        "poolingType": {
          "type": "string",
          "description": "Тип пулинга",
          "enum": [
            "MAX",
            "AVG",
            "SUM",
            "PNORM",
            "NONE"
          ]
        },
        "strideHeight": {
          "type": "integer",
          "format": "int32",
          "description": "Высота шага"
        },
        "strideWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Ширина шага"
        },
        "weightInitType": {
          "type": "string",
          "description": "Способ инициализации весов нейронов слоя",
          "enum": [
            "DISTRIBUTION",
            "ZERO",
            "SIGMOID_UNIFORM",
            "UNIFORM",
            "XAVIER",
            "XAVIER_UNIFORM",
            "XAVIER_FAN_IN",
            "XAVIER_LEGACY",
            "RELU",
            "RELU_UNIFORM"
          ]
        }
      },
      "title": "LayerDto"
    },
    "NeuronNetworkDto": {
      "type": "object",
      "required": [
        "pathToSave",
        "taskId"
      ],
      "properties": {
        "backprop": {
          "type": "boolean",
          "description": "Использовать обратное распространение ошибки"
        },
        "inputType": {
          "$ref": "#/definitions/InputTypeDto"
        },
        "iterations": {
          "type": "integer",
          "format": "int32",
          "description": "Кол-во итераций на каждой эпохе обучения"
        },
        "layers": {
          "type": "array",
          "description": "Настройки слоев сети",
          "items": {
            "$ref": "#/definitions/LayerDto"
          }
        },
        "learningRate": {
          "type": "number",
          "format": "double",
          "description": "Скорость обучения"
        },
        "optimizationAlgo": {
          "type": "string",
          "description": "Алгоритм обучения",
          "enum": [
            "LINE_GRADIENT_DESCENT",
            "CONJUGATE_GRADIENT",
            "HESSIAN_FREE",
            "LBFGS",
            "STOCHASTIC_GRADIENT_DESCENT"
          ]
        },
        "pathToSave": {
          "type": "string",
          "description": "Путь к файлу сохранения модели сети"
        },
        "pretrain": {
          "type": "boolean",
          "description": "Признак предварительного обучения"
        },
        "reforcement": {
          "$ref": "#/definitions/ReforcementDto"
        },
        "regularization": {
          "$ref": "#/definitions/RegularizationDto"
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "Число-инициализатор для генератора случайных чисел"
        },
        "taskId": {
          "type": "integer",
          "format": "int32",
          "description": "ID задачи"
        },
        "updater": {
          "$ref": "#/definitions/UpdaterDto"
        },
        "weightInit": {
          "type": "string",
          "description": "Правило инициализации весов",
          "enum": [
            "DISTRIBUTION",
            "ZERO",
            "SIGMOID_UNIFORM",
            "UNIFORM",
            "XAVIER",
            "XAVIER_UNIFORM",
            "XAVIER_FAN_IN",
            "XAVIER_LEGACY",
            "RELU",
            "RELU_UNIFORM"
          ]
        }
      },
      "title": "NeuronNetworkDto"
    },
    "ReforcementDto": {
      "type": "object",
      "properties": {
        "countEpoch": {
          "type": "integer",
          "format": "int32",
          "description": "Кол-во эпох для обучения"
        },
        "epsilonStep": {
          "type": "integer",
          "format": "int32",
          "description": "Знаменатель при вычислении случайного эпсилон"
        },
        "errorClamp": {
          "type": "number",
          "format": "double",
          "description": "Допустимый разброс при накапливании вознаграждения"
        },
        "gamma": {
          "type": "number",
          "format": "double",
          "description": "Гамма из уравнения Белла"
        },
        "minEpsilon": {
          "type": "number",
          "format": "float",
          "description": "Минимальный эпсилон (см. про Exploration в RL)"
        },
        "rewardFactor": {
          "type": "number",
          "format": "double",
          "description": "Коэффициент коррекции вознаграждения"
        },
        "updateStart": {
          "type": "integer",
          "format": "int32",
          "description": "Итерация, после которой происходит обновление нейронной сети (для RL)"
        }
      },
      "title": "ReforcementDto"
    },
    "RegularizationDto": {
      "type": "object",
      "properties": {
        "needRegularization": {
          "type": "boolean",
          "description": "Требуется ли проводить регуляризацию"
        },
        "regularizationBias": {
          "type": "number",
          "format": "double",
          "description": "Смещение при регуляризации"
        },
        "regularizationFactor": {
          "type": "number",
          "format": "double",
          "description": "Коэффициент регуляризации"
        },
        "regularizationType": {
          "type": "string",
          "description": "Тип регуляризации",
          "enum": [
            "L1",
            "L2"
          ]
        }
      },
      "title": "RegularizationDto"
    },
    "Role": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Role"
    },
    "TaskStatusChange": {
      "type": "object",
      "required": [
        "comment",
        "newStatus",
        "userUuid"
      ],
      "properties": {
        "comment": {
          "type": "string",
          "description": "Комментарий к изменению статуса"
        },
        "newStatus": {
          "type": "string",
          "description": "Новый статус задачи",
          "enum": [
            "CREATED",
            "ANALYSIS",
            "ANALYZED",
            "DISTRIBUTING",
            "DISTRIBUTED",
            "TRAINING",
            "TRAINED",
            "CONFIRMED",
            "STOPPED",
            "ANALYSIS_ERROR",
            "TRAINING_ERROR",
            "DISTRIBUTE_ERROR",
            "SYSTEM_ERROR"
          ]
        },
        "userUuid": {
          "type": "string",
          "format": "uuid",
          "description": "ID пользователя, изменившего статус"
        }
      },
      "title": "TaskStatusChange",
      "description": "Данные для обновления статуса задачи"
    },
    "TrainingRequest": {
      "type": "object",
      "properties": {
        "cloudToken": {
          "type": "string",
          "description": "Токен для авторизации в облаке"
        },
        "cloudType": {
          "type": "string",
          "description": "Тип облака для выгрузки датасетов",
          "enum": [
            "YANDEX"
          ]
        },
        "countEpoch": {
          "type": "integer",
          "format": "int32",
          "description": "Кол-во эпох для обучения нейросети"
        },
        "countStates": {
          "type": "integer",
          "format": "int32",
          "description": "Кол-во состояний (для РЛ)"
        },
        "datasetType": {
          "type": "string",
          "description": "Тип данных для обучения нейросети",
          "enum": [
            "IMAGE"
          ]
        },
        "neuronNetworkStructure": {
          "description": "Структура нейросети",
          "$ref": "#/definitions/NeuronNetworkDto"
        },
        "pathToDataset": {
          "type": "string",
          "description": "Путь к папке в облаке с датасетами"
        },
        "userUuid": {
          "type": "string",
          "format": "uuid",
          "description": "UUID пользователя"
        },
        "withMentoring": {
          "type": "boolean",
          "description": "Включить подкрепление к обучению"
        }
      },
      "title": "TrainingRequest",
      "description": "Запрос на создание задачи по обучению нейронной сети"
    },
    "TrainingResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Комментарий к статусу"
        },
        "currentPrecision": {
          "type": "number",
          "format": "double",
          "description": "Текущая точность обучения сети"
        },
        "status": {
          "type": "string",
          "description": "Текущий статус задачи на обучение",
          "enum": [
            "CREATED",
            "ANALYSIS",
            "ANALYZED",
            "DISTRIBUTING",
            "DISTRIBUTED",
            "TRAINING",
            "TRAINED",
            "CONFIRMED",
            "STOPPED",
            "ANALYSIS_ERROR",
            "TRAINING_ERROR",
            "DISTRIBUTE_ERROR",
            "SYSTEM_ERROR"
          ]
        }
      },
      "title": "TrainingResponse",
      "description": "Обученная нейронная сеть"
    },
    "TrainingStatistic": {
      "type": "object",
      "properties": {
        "precisions": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "title": "TrainingStatistic",
      "description": "Статистика обучения нейросети"
    },
    "UpdaterDto": {
      "type": "object",
      "properties": {
        "updaterFactor": {
          "type": "number",
          "format": "double",
          "description": "Коэффициент оптимизации скорости обучения"
        },
        "updaterType": {
          "type": "string",
          "description": "Тип оптимизации скорости обучения",
          "enum": [
            "NESTEROVS"
          ]
        }
      },
      "title": "UpdaterDto"
    },
    "User": {
      "type": "object",
      "properties": {
        "accountNonExpired": {
          "type": "boolean"
        },
        "accountNonLocked": {
          "type": "boolean"
        },
        "authorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantedAuthority"
          }
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "credentialsNonExpired": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "password": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "username": {
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "vipLevel": {
          "type": "string",
          "enum": [
            "NONE",
            "BASIC",
            "GOLD",
            "PLATINUM"
          ]
        }
      },
      "title": "User"
    },
    "UserRegister": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "UserRegister",
      "description": "Информация для регистрации пользователя"
    }
  }
}